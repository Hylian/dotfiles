exec dex -ae i3

# Colors
# class                 border  backgr. text    indicator child_border
client.focused          #FACE48 #3b70ac #ffffff #2e9ef4   #4c7899 
client.focused_inactive #333333 #5f676a #ffffff #484e50   #5f676a
client.unfocused        #333333 #222222 #888888 #292d2e   #222222
client.urgent           #2f343a #900000 #ffffff #900000   #900000
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

for_window [class=".*"] border pixel 0

gaps inner 5
smart_gaps off
smart_borders on
hide_edge_borders smart_no_gaps
#border_radius 37

# start a terminal
bindsym $mod+Return exec "kitty -d $HOME"

#bindsym $mod+q exec "qutebrowser"
#bindsym $mod+q exec "QT_AUTO_SCREEN_SCALE_FACTOR=1 qutebrowser --backend webengine --qt-flag ignore-gpu-blacklist --qt-flag enable-gpu-rasterization --qt-flag enable-native-gpu-memory-buffers --qt-flag num-raster-threads=4"
#bindsym $mod+q exec "QT_AUTO_SCREEN_SCALE_FACTOR=1 qutebrowser --backend webengine --qt-flag num-raster-threads=4"
#bindsym $mod+q exec "QT_AUTO_SCREEN_SCALE_FACTOR=1 qutebrowser"
bindsym $mod+q exec "firefox" border none
#bindsym $mod+g exec "wmfocus"

# kill focused window
bindsym $mod+d kill

# start dmenu (a program launcher)
#bindsym $mod+t exec dmenu_run
#bindsym $mod+t exec "rofi -show run"
#bindsym $mod+t exec "rofi -kb-remove-to-eol '' -show run"
bindsym $mod+t exec "$HOME/.config/rofi/launchers/type-2/launcher.sh"
#bindsym $mod+g exec "rofi -show window"
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#
bindsym $mod+g exec "CM_LAUNCHER=rofi clipmenu"
bindsym $mod+Shift+g exec "PINENTRY_PROGRAM=pinentry-rofi rofi -modi 1pass:rofi-1pass -show 1pass"
#bindsym $mod+Shift+g exec "rofi -modi 1pass:rofi-1pass -show 1pass"

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+mod1+h move workspace to output left
bindsym $mod+mod1+j move workspace to output down
bindsym $mod+mod1+k move workspace to output up
bindsym $mod+mod1+l move workspace to output right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
#bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
#bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

# assign workspaces to screens
workspace 1 output primary
workspace 2 output primary
workspace 3 output primary
#workspace 3 output primary
#workspace 4 output primary
#workspace 5 output primary
#workspace 6 output primary
#workspace 7 output primary
#workspace 8 output primary

workspace 4 output DP2 HDMI1
workspace 5 output DP2 HDMI1
workspace 6 output DP2 HDMI1
workspace 7 output DP2 HDMI1
workspace 8 output DP2 HDMI1
workspace 9 output DP2 HDMI1

# switch to output
bindsym $mod+bracketright focus output eDP1
bindsym $mod+bracketleft focus output eDP1
bindsym $mod+shift+bracketright focus output HDMI-1-0
bindsym $mod+shift+bracketleft focus output HDMI-1-0

#bindsym $mod+u focus output eDP1
#bindsym $mod+i focus output DP2-2
#bindsym $mod+o focus output DP2-1

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

bindsym $mod+Left workspace prev
bindsym $mod+Control+Left workspace prev_on_output
bindsym $mod+Right workspace next
bindsym $mod+Control+Right workspace next_on_output

bindsym $mod+Tab workspace back_and_forth
bindsym $mod+Shift+grave workspace back_and_forth

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
#bindsym $mod+Control+l exec "i3lock -c 000000"
#bindsym $mod+Control+l exec "i3lock"
bindsym $mod+Control+l exec /usr/share/goobuntu-desktop-files/xsecurelock.sh
#bindsym $mod+p exec cinnamon-screensaver-command --lock


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        mode invisible
        #status_command i3status
}

exec_always --no-startup-id $HOME/.config/polybar/launch.sh
exec_always --no-startup-id setxkbmap -option ctrl:nocaps
exec_always --no-startup-id xset r rate 200 50
exec --no-startup-id nm-applet
exec --no-startup-id xsetroot --solid "#4d4544"
exec_always --no-startup-id picom -b --config $HOME/.config/picom/picom.conf
